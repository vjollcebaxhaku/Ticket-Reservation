// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@localhost:3306/ticket-reservation"
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String?
  name     String?
  surname  String?
  username String?
  role     String?

  // Add the opposite relation field for tickets
  tickets  Ticket[] // This will allow retrieving all tickets associated with a user
}

model Ticket {
  id        Int      @id @default(autoincrement())
  name      String
  price     Float
  userId    Int
  type      String

  // Foreign key relation to User
  user      User     @relation(fields: [userId], references: [id])
}

model News {
  id          Int      @id @default(autoincrement())
  title       String
  content     String
  publishedAt DateTime
}

model Gallery {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  imageUrl    String
  publishedAt DateTime  @default(now())
}

model FAQ {
  id          Int      @id @default(autoincrement())
  question    String
  answer      String
}



model Lineup {
  id          Int      @id @default(autoincrement())
  artistName  String
  genre       String
  description String
  imageUrl    String
  concertID   Int
  concert     Concert  @relation(fields: [concertID], references: [id])
}

model Concert {
  id       Int      @id @default(autoincrement())
  name     String
  year     Int
  location String
  lineups  Lineup[]
}
